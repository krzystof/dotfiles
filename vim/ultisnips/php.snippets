snippet =>
'${1}' => ${2},
endsnippet

snippet dd "die and dump it!"
dd(\$${1:this});
endsnippet

snippet dvd "good ol die var dump"
die(var_dump(${1}));
endsnippet

snippet $ "this->"
\$this->${1}
endsnippet

snippet this "auto this->" A
\$this->${1}
endsnippet

snippet c "constructor"
public function __construct(${1})
{
	${1}
}
endsnippet

snippet f "function"
public function ${1:nameme}(${2})
{
	${3}
}
endsnippet

snippet pf "private function"
private function ${1:nameme}(${2})
{
	${3}
}
endsnippet

snippet sf "static function"
${1:public} static function ${2:nameme}(${3})
{
	${4}
}
endsnippet

snippet wip "wip a test"
/** @group wip */
endsnippet

snippet t "new test"
/** @group wip */
function test_${1:a_thing_that_should_be_a_thing}()
{
	$0
}
endsnippet

snippet weh "withoutExceptionHandling"
$this->withoutExceptionHandling();
endsnippet

snippet if "if statement"
if ($1) {
	$0
}
endsnippet

snippet pry "pry"
eval(\Psy\sh());
endsnippet

snippet _namespaced "php file" b
<?php

namespace `!v my#php#namespace()`;

class `!v my#php#classname_from_file()`
{
	public function ${1:doStuff}()
	{
		${2}
	}
}
endsnippet

snippet "^fn" "public function" Art
${2:public} function ${1:funktion}(${3})
{
	${0}
}
endsnippet

snippet _laravel_test
<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class `!v my#php#classname_from_file()` extends TestCase
{
	use RefreshDatabase;

	function test_${1:a feature}()
	{
		${2}
	}
}
endsnippet

snippet ass
$this->assert${3:Equals}($1, $2);
endsnippet

snippet foreach
foreach (${1:\$items} as ${2:\$item}) {
	$0
}
endsnippet

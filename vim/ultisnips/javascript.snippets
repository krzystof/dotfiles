snippet log "console.log stuff"
console.log(${1})
endsnippet

snippet l "console.log stuff even quicker"
console.log('>>>', $0)
endsnippet

snippet if
if (${1}) {
	${2}
}
endsnippet

snippet switch "switch"
switch (${1}) {
	case ${2}:
		${3}
	default:
		throw Error('No matching case in switch expression')
}
endsnippet

snippet > "arrow function" i
(${1}) => ${2:{$3}}
endsnippet

snippet import "Import stuff" b
import $1 from '$2${0:$1}'
endsnippet

snippet jest
/* eslint-env jest */
import `!v my#js#test_file_to_name()` from '../`!v my#js#test_file_to_name()`'

describe('`!v my#js#test_file_to_name()`', () => {
  test('${1}', () => {
		${2}
		expect('stuff').toBe('tested')
  })
})
endsnippet

snippet vuetest "Vue component test"
/* eslint-env jest */
import { mount } from '@vue/test-utils'
import `!v my#js#test_file_to_name()` from '../`!v my#js#test_file_to_name()`'

describe('`!v my#js#test_file_to_name()`', () => {
  test('${1}', () => {
		${2}
		expect('stuff').toBe('tested')
  })
})
endsnippet

snippet test "test" b
test('${1:Some things needs certainty}', () => {
	${2}
})
endsnippet

snippet "describe" "describe block" rbA
describe('$1', () => {
	test('$2', () => {
		$0
	})
})
endsnippet

snippet wrapdesc
describe('$1', () => {
	${VISUAL}
})
endsnippet

# Prop types stuff
snippet ptf
PropTypes.func.isRequired
endsnippet
